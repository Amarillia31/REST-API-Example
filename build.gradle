plugins {
    id 'java-library'
    id "io.freefair.lombok" version "6.0.0-m2"
    id "io.qameta.allure" version "2.9.6"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

allure {
    report {
        version.set("2.18.1")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.18.1")
            }
        }
    }
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation(
            "com.codeborne:selenide:6.6.3",
            "org.junit.jupiter:junit-jupiter:5.8.2",
            'io.rest-assured:rest-assured:5.1.1',
            "org.aeonbits.owner:owner:1.0.12",
            "io.qameta.allure:allure-selenide:2.18.1",
            "io.qameta.allure:allure-rest-assured:2.18.1",
            "org.aspectj:aspectjweaver:1.9.6",
            "org.assertj:assertj-core:3.19.0",
            "org.slf4j:slf4j-simple:1.7.36",
            "com.fasterxml.jackson.core:jackson-databind:2.11.2"
    )

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {

    systemProperty "chromeoptions.prefs", "intl.accept_languages=ru"

    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}